apiVersion: v1
kind: ServiceAccount
metadata:
  name: appsentry-backend
  namespace: appsentry
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appsentry-backend
rules:
- apiGroups: [""]
  resources: ["pods", "namespaces", "nodes", "services", "endpoints"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["replicasets", "deployments", "daemonsets", "statefulsets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["extensions"]
  resources: ["replicasets", "deployments", "daemonsets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["batch"]
  resources: ["jobs", "cronjobs"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: appsentry-backend
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: appsentry-backend
subjects:
- kind: ServiceAccount
  name: appsentry-backend
  namespace: appsentry
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: appsentry-backend
  namespace: appsentry
  labels:
    app: appsentry-backend
    component: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: appsentry-backend
  template:
    metadata:
      labels:
        app: appsentry-backend
        component: backend
    spec:
      serviceAccountName: appsentry-backend
      containers:
      - name: backend
        image: docker.io/lijomadassery/appsentry-backend:v2.1
        ports:
        - containerPort: 3001
          name: http
        env:
        # Kubernetes Downward API - Pod Metadata
        - name: K8S_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: K8S_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: K8S_CONTAINER_NAME
          value: "backend"
        - name: K8S_POD_UID
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        - name: K8S_CLUSTER_NAME
          value: "appsentry-cluster"
        
        # Application Configuration
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3001"
        - name: CORS_ORIGIN
          value: "*"
        - name: LOG_LEVEL
          value: "info"
        
        # Database Configuration
        - name: DATABASE_URL
          value: "mysql://appsentry:appsentry456@mysql:3306/appsentry"
        
        # JWT Authentication Configuration
        - name: JWT_SECRET
          value: "appsentry-jwt-secret-2025-dev-cluster"
        - name: JWT_EXPIRES_IN
          value: "1h"
        - name: JWT_REFRESH_EXPIRES_IN
          value: "7d"
        
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        
        livenessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 30
          periodSeconds: 10
        
        readinessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 5
          periodSeconds: 5

---
apiVersion: v1
kind: Service
metadata:
  name: appsentry-backend
  namespace: appsentry
  labels:
    app: appsentry-backend
spec:
  selector:
    app: appsentry-backend
  ports:
  - name: http
    port: 3001
    targetPort: 3001
  type: ClusterIP